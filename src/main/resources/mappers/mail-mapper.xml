<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mailMapper">

	<resultMap type="ReceiveMail" id="receiveMail">
		<result column="mail_no" property="mailNo" />
		<result column="mail_writer" property="mailWriter" />
		<result column="mail_receiver" property="mailReceiver" />
		<result column="recycle_bin_status" property="recycleBinStatus" />
		<result column="receive_status" property="receiveStatus" />
		<result column="bookmark" property="bookmark" />
		
		<result column="mail_title" property="mailTitle" />
		<result column="mail_cnt" property="mailContent" />
		<result column="mail_send_date" property="mailSendDate" />
		
		<result column="mail_file_no" property="mailFNo" />
		<result column="mail_filesize" property="mailFSize" />
		
		<result column="mf_Is_Have" property="mfIsHave" />
		<result column="receiverCount" property="receiverCount" />
		<result column="receiverYCount" property="receiverYCount" />
	</resultMap>
	
	<resultMap type="SendMail" id="sendMail">
		<result column="mail_no" property="mailNo" />
		<result column="mem_no" property="memNo" />
		<result column="mail_writer" property="mailWriter" />
		<result column="mail_receiver" property="mailReceiver" />
		<result column="mail_title" property="mailTitle" />
		<result column="mail_cnt" property="mailContent" />
		<result column="mail_send_date" property="mailSendDate" />
		<result column="temp_box" property="tempBox" />
		<result column="mf_Is_Have" property="mfIsHave" />
	</resultMap>
	
	<resultMap type="MailFile" id="mailFile">
		<result column="mail_file_no" property="mailFNo" />
		<result column="mail_no" property="mailNo" />
		<result column="mail_origin" property="mailOrigin" />
		<result column="mail_update" property="mailUpdate" />
		<result column="mail_file_path" property="mailFPath" />
		<result column="mail_filesize" property="mailFSize" />
		<result column="mail_filetype" property="mailFType" />
	</resultMap>
	
	<select id="receiveMailListView" parameterType="string" resultMap="receiveMail">
		select 
		       r.mail_no
		     , r.mail_writer
		     , r.mail_receiver
		     , r.recycle_bin_status
		     , r.receive_status
		     , r.bookmark
		     , s.mail_title
		     , s.mail_send_date
		     , (select count(*)
		          from mail_file mf
		         where mf.mail_no = r.mail_no) mf_Is_Have
		  from receive_mail r
		  join send_mail s
		    on (r.mail_no = s.mail_no) 
		 where r.mail_receiver = #{email}
		   and r.recycle_bin_status = 'Y'
		   and s.temp_box = 'N'
		 order 
		    by s.mail_send_date desc
	</select>
	
	<select id="sendMailListView" parameterType="string" resultMap="sendMail">
		select 
		       s.mail_no
		     , s.mem_no
		     , s.mail_receiver
		     , s.mail_writer
		     , s.mail_title
		     , s.mail_send_Date
   		     , (select count(*)
        		  from mail_file mf
      			 where mf.mail_no = s.mail_no) mf_Is_Have
		  from send_mail s
		 where s.mail_writer = #{email}
		   and s.temp_box = 'N'
		 order
		    by s.mail_send_date desc
	</select>
	
	<select id="receiverList" parameterType="string" resultMap="receiveMail">
		select 
			   r.mail_no
             , r.mail_receiver
             , r.receive_status
             , (select count(*)
             	  from receive_mail r
             	 where r.mail_no = s.mail_no) receiverCount
             , (select count(*)
             	  from receive_mail r
             	 where r.mail_no = s.mail_no
             	   and r.receive_status = 'Y') receiverYCount
		     , (select count(*)
		          from mail_file mf
		         where mf.mail_no = s.mail_no) mf_Is_Have
		  from receive_mail r
          join send_mail s
            on (r.mail_no = s.mail_no)
		 where r.mail_writer = #{email}
		   and s.temp_box = 'N'
	</select>
	
	<select id="tempboxListView" parameterType="string" resultMap="sendMail">
		select 
		       s.mail_no
		     , s.mem_no
		     , s.mail_writer
		     , s.mail_receiver
		     , s.mail_title
		     , s.mail_send_Date
		     , r.bookmark
   		     , (select count(*)
        		  from mail_file mf
      			 where mf.mail_no = s.mail_no) mf_Is_Have
		  from send_mail s
		  join receive_mail r
		    on (s.mail_no = r.mail_no)
		 where s.mail_writer = #{email}
		   and s.temp_box = 'Y'
		   and r.recycle_bin_status = 'Y'
	</select>
	
	<select id="recycleBinRList" parameterType="string" resultMap="receiveMail">
		select 
		       r.mail_no
		     , r.mail_writer
		     , r.mail_receiver
		     , r.recycle_bin_status
		     , r.receive_status
		     , r.bookmark
		     , s.mail_send_date
		     , s.mail_title
		     , (select count(*)
		          from mail_file mf
		         where mf.mail_no = r.mail_no) mf_Is_Have
		  from receive_mail r
          join send_mail s
            on (r.mail_no = s.mail_no)
		 where r.mail_receiver like '%' || #{email} || '%'
           and r.recycle_bin_status ='A'
		 order 
		    by s.mail_send_date
		
	</select>
	
	<insert id="insertSMail" parameterType="SendMail">
		insert
		  into send_mail
		     ( mail_no
		     , mem_no
		     , mail_writer
		     , mail_receiver
		     , mail_title
		     , mail_cnt
		     )
			   values 
			 ( seq_mailno.nextval
			 , #{memNo}
			 , #{mailWriter}
			 , #{mailReceiver}
			 , #{mailTitle}
			 , #{mailContent}
			 )
		     
	</insert>
	
	<insert id="insertRMail" parameterType="java.util.List">
		<foreach item="i" index="index" collection="list" 
		open="insert all" 
		close="select * from dual">
		  into receive_mail
		     ( mail_no
		     , mail_writer
		     , mail_receiver
		     , recycle_bin_status
		     , receive_status
		     , bookmark
		     )
		       values
		     ( seq_mailno.currval
		     , #{i.mailWriter}
		     , #{i.mailReceiver}
		     , 'Y'
		     , 'N'
		     , 'N'
		     )
		</foreach>
	</insert>
	
	<insert id="insertMFMail" parameterType="MailFile">
		insert
		  into mail_file
		     ( mail_file_no
		     , mail_no
		     , mail_origin
		     , mail_update
		     , mail_file_path
		     , mail_filesize
		     , mail_filetype
		   	 )
		   	   values
		   	 ( seq_mailfno.nextval
		   	 , seq_mailno.currval
		   	 , #{mailOrigin}
		   	 , #{mailUpdate}
		   	 , #{mailFPath}
		   	 , #{mailFSize}
		   	 , #{mailFType}
		   	 )
	</insert>
	
	<insert id="tempSMail" parameterType="SendMail">
		insert
		  into send_mail
		     ( mail_no
		     , mem_no
		     , mail_writer
		     , mail_receiver
		     , mail_title
		     , mail_cnt
		     , temp_box
		     )
			   values 
			 ( seq_mailno.nextval
			 , #{memNo}
			 , #{mailWriter}
			 , #{mailReceiver}
			 , #{mailTitle}
			 , #{mailContent}
			 , 'Y'
			 )
		     
	</insert>
	
	<insert id="tempRMail" parameterType="java.util.List">
		<foreach item="i" index="index" collection="list" 
		open="insert all" 
		close="select * from dual">
		  into receive_mail
		     ( mail_no
		     , mail_writer
		     , mail_receiver
		     , recycle_bin_status
		     , receive_status
		     , bookmark
		     )
		       values
		     ( seq_mailno.currval
		     , #{i.mailWriter}
		     , #{i.mailReceiver}
		     , 'Y'
		     , 'N'
		     , 'N'
		     )
		</foreach>
	</insert>
	
	<insert id="tempMFMail" parameterType="MailFile">
		insert
		  into mail_file
		     ( mail_file_no
		     , mail_no
		     , mail_origin
		     , mail_update
		     , mail_file_path
		     , mail_filesize
		     , mail_filetype
		   	 )
		   	   values
		   	 ( seq_mailfno.nextval
		   	 , seq_mailno.currval
		   	 , #{mailOrigin}
		   	 , #{mailUpdate}
		   	 , #{mailFPath}
		   	 , #{mailFSize}
		   	 , #{mailFType}
		   	 )
	</insert>
	
	<update id="deleteMail" parameterType="hashmap" >
		update receive_mail
		   set 
		       recycle_bin_status = 'A'
		       where mail_no in
		       <foreach item="item" index="index" collection="mailNo" open="(" separator="," close=")">
		  						#{item}      
		       </foreach>
		   and mail_receiver = #{email}     
	</update>
	
	<update id="deleteTMail" parameterType="hashmap" >
		update receive_mail 
		   set 
		       recycle_bin_status = 'A'
		       where mail_no in
		       <foreach item="item" index="index" collection="mailNo" open="(" separator="," close=")">
		  						#{item}      
		       </foreach>
		   and mail_receiver = #{email}     
	</update>
	
	<update id="ttDeleteMail" parameterType="hashmap" >
		update receive_mail 
		   set 
		       recycle_bin_status = 'D'
		       where mail_no in
		       <foreach item="item" index="index" collection="mailNo" open="(" separator="," close=")">
		  						#{item}      
		       </foreach>
		   and mail_receiver = #{email}     
	</update>
	
	<update id="readMail" parameterType="ReceiveMail">
		update receive_mail
		   set
		       receive_status = 'Y'
		 where mail_no = #{mailNo}
		   and mail_receiver = #{mailReceiver}
	
	</update>
	
	<select id="detailRMail" parameterType="ReceiveMail" resultMap="receiveMail">
		select
		 	   r.mail_no
		 	 , r.mail_writer
		 	 , r.mail_receiver
			 , r.recycle_bin_status
		     , r.receive_status
		     , r.bookmark 
		     , s.mail_title
		     , s.mail_cnt
		     , s.mail_send_date
		  from receive_mail r
		  join send_mail s
		    on (r.mail_no = s.mail_no)
		 where r.mail_no = #{mailNo}
		   and s.mail_title = #{mailTitle}
		   and r.mail_receiver = #{mailReceiver}
	</select>
	
	<select id="detailMFMail" parameterType="ReceiveMail" resultMap="mailFile">
		select
		       mf.mail_file_no
		     , mf.mail_origin
		     , mf.mail_update
		     , mf.mail_file_path
		     , mf.mail_filesize
		     , mf.mail_filetype
		  from mail_file mf		   
		  join receive_mail r 
		    on (mf.mail_no = r.mail_no)
	      join send_mail s
		    on (mf.mail_no = s.mail_no)
		 where r.mail_no = #{mailNo}
		   and s.mail_title = #{mailTitle}
		   and r.mail_receiver = #{mailReceiver}     
	</select>
	
	<select id="detailSMail" parameterType="SendMail" resultMap="sendMail">  
		select 
		       s.mail_no
		     , s.mail_writer
		     , s.mail_receiver
		     , s.mail_title
		     , s.mail_cnt
		     , s.mail_send_date
		  from send_mail s
		 where s.mail_no = #{mailNo}
		   and s.mail_title = #{mailTitle}
		   
	</select>
	
	<update id="updateImpor" parameterType="ReceiveMail">
		update receive_mail
		<choose>
			<when test='bookmark == "N"'>
			set 
		       bookmark = 'Y'
			</when>
			<otherwise>
			set 
		       bookmark = 'N'			
			</otherwise>
		</choose>
		 where mail_no = #{mailNo}
		   and mail_receiver = #{mailReceiver}
	</update>
	
	<select id="imporListView" parameterType="ReceiveMail" resultMap="receiveMail">
		select 
		       r.mail_no
		     , r.mail_writer
		     , r.mail_receiver
		     , r.recycle_bin_status
		     , r.receive_status
		     , r.bookmark
		     , s.mail_title
		     , s.mail_send_Date
		     , (select count(*)
		          from mail_file mf
		         where mf.mail_no = r.mail_no) mf_Is_Have
		  from receive_mail r
		  join send_mail s
		    on (r.mail_no = s.mail_no) 
		 where r.mail_receiver = #{mailReceiver}
		   and r.recycle_bin_status = 'Y'
		   and r.bookmark = 'Y'
	</select>
	
	<select id="reply" parameterType="ReceiveMail" resultMap="receiveMail">
		select
		 	   r.mail_no
		 	 , r.mail_writer
		 	 , r.mail_receiver
			 , r.recycle_bin_status
		     , r.receive_status
		     , r.bookmark 
		     , s.mail_title
		     , s.mail_cnt
		     , s.mail_send_date
		  from receive_mail r
		  join send_mail s
		    on (r.mail_no = s.mail_no)
		 where r.mail_no = #{mailNo}
		   and s.mail_title = #{mailTitle}
		   and r.mail_receiver = #{mailReceiver}
	</select>
	
	<select id="replyMF" parameterType="ReceiveMail" resultMap="mailFile">
		select
		       mf.mail_file_no
		     , mf.mail_origin
		     , mf.mail_update
		     , mf.mail_file_path
		     , mf.mail_filesize
		     , mf.mail_filetype
		  from mail_file mf		   
		  join receive_mail r 
		    on (mf.mail_no = r.mail_no)
	      join send_mail s
		    on (mf.mail_no = s.mail_no)
		 where r.mail_no = #{mailNo}
		   and s.mail_title = #{mailTitle}
		   and r.mail_receiver = #{mailReceiver}    	
	</select>
	
	<select id="forwardMail" parameterType="ReceiveMail" resultMap="receiveMail">
		select
		 	   r.mail_no
		 	 , r.mail_writer
		 	 , r.mail_receiver
			 , r.recycle_bin_status
		     , r.receive_status
		     , r.bookmark 
		     , s.mail_title
		     , s.mail_cnt
		     , s.mail_send_date
		  from receive_mail r
		  join send_mail s
		    on (r.mail_no = s.mail_no)
		 where r.mail_no = #{mailNo}
		   and s.mail_title = #{mailTitle}
		   and r.mail_receiver = #{mailReceiver}
	</select>
	
	<select id="forwarMFMail" parameterType="ReceiveMail" resultMap="mailFile">
		select
		       mf.mail_file_no
		     , mf.mail_origin
		     , mf.mail_update
		     , mf.mail_file_path
		     , mf.mail_filesize
		     , mf.mail_filetype
		  from mail_file mf		   
		  join receive_mail r 
		    on (mf.mail_no = r.mail_no)
	      join send_mail s
		    on (mf.mail_no = s.mail_no)
		 where r.mail_no = #{mailNo}
		   and s.mail_title = #{mailTitle}
		   and r.mail_receiver = #{mailReceiver}    	
	</select>
	
		<select id="forwardSMail" parameterType="SendMail" resultMap="sendMail">
		select
		 	   s.mail_no
		 	 , s.mail_writer
		 	 , s.mail_receiver 
		     , s.mail_title
		     , s.mail_cnt
		     , s.mail_send_date
		  from send_mail s
		 where s.mail_no = #{mailNo}
		   and s.mail_title = #{mailTitle}
		   and s.mail_receiver = #{mailReceiver}
	</select>
	
	<select id="forwarMFSMail" parameterType="SendMail" resultMap="mailFile">
		select
		       mf.mail_file_no
		     , mf.mail_origin
		     , mf.mail_update
		     , mf.mail_file_path
		     , mf.mail_filesize
		     , mf.mail_filetype
		  from mail_file mf		   
		  join receive_mail r 
		    on (mf.mail_no = r.mail_no)
	      join send_mail s
		    on (mf.mail_no = s.mail_no)
		 where r.mail_no = #{mailNo}
		   and s.mail_title = #{mailTitle}
		   and r.mail_receiver = #{mailReceiver}    	
	</select>
</mapper>


